{
  "permissions": {
    "allow": [
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py llm_pipeline.py)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py tts_pipeline.py)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py main_full.py)",
      "Bash(ollama:*)",
      "Bash(powershell:*)",
      "Bash(python test:*)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py F:Anitest_ollama.py)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -m pip install TTS)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -m pip install coqui-tts)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -u main_full.py)",
      "Bash(curl:*)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -m pip install pypinyin)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit: Ani - AI Voice Companion\n\nFeatures:\n- Bilingual support (English + Chinese)\n- Voice cloning with XTTS-v2\n- Local LLM via Ollama (Qwen2.5/Qwen3)\n- OpenAI API integration\n- Real-time WebSocket communication\n- GPU-accelerated inference (RTX 4060)\n- Browser-based speech recognition\n- FastAPI backend + HTML/JS frontend\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git config:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(PYTHONIOENCODING=utf-8 /c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -u main_full.py)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py -m pip install python-osc)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py animation_controller.py)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(/c/Users/johnn/AppData/Local/Programs/Python/Launcher/py test_vmc.py)",
      "Bash(taskkill:*)",
      "Bash(tasklist)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(cmd.exe:*)",
      "Bash(py:*)",
      "Bash(timeout:*)"
    ],
    "deny": [],
    "ask": []
  }
}